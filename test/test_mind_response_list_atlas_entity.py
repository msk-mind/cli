# coding: utf-8

"""
    MSK-MIND REST API

    MSK-MIND REST API  # noqa: E501

    The version of the OpenAPI document: v0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.mind_response_list_atlas_entity import MindResponseListAtlasEntity  # noqa: E501
from openapi_client.rest import ApiException

class TestMindResponseListAtlasEntity(unittest.TestCase):
    """MindResponseListAtlasEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MindResponseListAtlasEntity
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.mind_response_list_atlas_entity.MindResponseListAtlasEntity()  # noqa: E501
        if include_optional :
            return MindResponseListAtlasEntity(
                status = 'OK', 
                summary = '0', 
                description = '0', 
                payload = [
                    openapi_client.models.atlas_entity.AtlasEntity(
                        type_name = '0', 
                        attributes = {
                            'key' : None
                            }, 
                        guid = '0', 
                        home_id = '0', 
                        is_proxy = True, 
                        provenance_type = 56, 
                        status = 'ACTIVE', 
                        created_by = '0', 
                        updated_by = '0', 
                        create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        version = 56, 
                        relationship_attributes = {
                            'key' : None
                            }, 
                        classifications = [
                            openapi_client.models.atlas_classification.AtlasClassification(
                                type_name = '0', 
                                entity_guid = '0', 
                                entity_status = 'ACTIVE', 
                                propagate = True, 
                                validity_periods = [
                                    openapi_client.models.time_boundary.TimeBoundary(
                                        start_time = '0', 
                                        end_time = '0', 
                                        time_zone = '0', )
                                    ], 
                                remove_propagations_on_entity_delete = True, )
                            ], 
                        meanings = [
                            openapi_client.models.atlas_term_assignment_header.AtlasTermAssignmentHeader(
                                term_guid = '0', 
                                relation_guid = '0', 
                                description = '0', 
                                display_text = '0', 
                                expression = '0', 
                                created_by = '0', 
                                steward = '0', 
                                source = '0', 
                                confidence = 56, 
                                status = 'DISCOVERED', )
                            ], 
                        proxy = True, )
                    ]
            )
        else :
            return MindResponseListAtlasEntity(
        )

    def testMindResponseListAtlasEntity(self):
        """Test MindResponseListAtlasEntity"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
